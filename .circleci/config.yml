version: 2
jobs:
  build: #単体テストを実行するジョブ
    working_directory: ~/my-app
    docker:
      # - image: ruby:2.4.0
      - image: circleci/php:7.1-browsers
    steps:
      - checkout
      - run: echo "Here is build."
      # - run: bundle install --path vendor/bundle
      # - run:
      #     name: Run Test
      #     command: bundle exec rspec
  deploy: #デプロイするジョブ
    working_directory: ~/my-app
    docker:
      # - image: ruby:2.4.0
      - image: circleci/php:7.1-browsers
    steps:
      - checkout
      - run: echo "Here is deploy."
      # - run: bundle install --path vendor/bundle
      # - run: bundle exec rake deploy
      - run: ls
      - run: cd src/Sample
      - run: composer update
      - run: php artisan deploy:exec

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy: # deployはbuildのあとに実行
          requires:
            - build
          filters: # developブランチの場合のみデプロイする
            branches:
              only: master



# # PHP CircleCI 2.0 configuration file
# #
# # Check https://circleci.com/docs/2.0/language-php/ for more details
# #
# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/php:7.1-browsers
#
#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mysql:9.4
#
#     working_directory: ~/repo
#
#     steps:
#       - checkout
#
#       - run: echo "This is Circle CI test."
#       # # Download and cache dependencies
#       # - restore_cache:
#       #     keys:
#       #     - v1-dependencies-{{ checksum "composer.json" }}
#       #     # fallback to using the latest cache if no exact match is found
#       #     - v1-dependencies-
#       #
#       # - run: composer install -n --prefer-dist
#       #
#       # - save_cache:
#       #     paths:
#       #       - ./vendor
#       #     key: v1-dependencies-{{ checksum "composer.json" }}
#       #
#       # # run tests!
#       # - run: phpunit
