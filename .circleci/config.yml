version: 2
jobs:
  build: #単体テストを実行するジョブ
    working_directory: ~/my-app
    docker:
      # - image: ruby:2.4.0
      - image: circleci/php:7.1-browsers
    steps:
      - checkout
      - run: echo "Here is build."
      # - run: bundle install --path vendor/bundle
      # - run:
      #     name: Run Test
      #     command: bundle exec rspec

  deploy: #デプロイするジョブ
    working_directory: ~/circleci-workflows
    environment:
      AWS_CODE_DEPLOY_REGION: ap-northeast-1
      AWS_CODE_DEPLOY_APPLICATION_NAME: "CodeDeploySampleApplication"
      AWS_CODE_DEPLOY_DEPLOYMENT_CONFIG_NAME: CodeDeployDefault.AllAtOnce
      AWS_CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: "CodeDeploySampleDeployGroup"
      AWS_CODE_DEPLOY_SERVICE_ROLE_ARN: "arn:aws:iam::167461194196:role/CodeDeployRole"
      # AWS_CODE_DEPLOY_EC2_TAG_FILTERS: "Key=Type,Value=www,Type=KEY_AND_VALUE"
      # AWS_CODE_DEPLOY_APP_SOURCE: $HOME/deploy
      # AWS_CODE_DEPLOY_APP_SOURCE: /home/circleci/circleci-workflows/src/Sample
      AWS_CODE_DEPLOY_APP_SOURCE: "$HOME/deploy/Sample"
      AWS_CODE_DEPLOY_S3_FILENAME: "${CIRCLE_BUILD_NUM}#${CIRCLE_SHA1:0:7}.zip"
      AWS_CODE_DEPLOY_S3_BUCKET: chiba-app
      AWS_CODE_DEPLOY_S3_KEY_PREFIX: /www
      AWS_CODE_DEPLOY_S3_LIMIT_BUCKET_FILES: 10
      AWS_CODE_DEPLOY_S3_SSE: true
      AWS_CODE_DEPLOY_REVISION_DESCRIPTION: "${CIRCLE_BRANCH} (#${CIRCLE_SHA1:0:7})"
      AWS_CODE_DEPLOY_DEPLOYMENT_DESCRIPTION: "Deployed via CircleCI on $(date)"
      AWS_CODE_DEPLOY_DEPLOYMENT_FILE_EXISTS_BEHAVIOR: "OVERWRITE"

    docker:
      # - image: ruby:2.4.0
      - image: circleci/php:7.1-browsers
    steps:
      - checkout
      - run: echo "Here is deploy."
      # - run: bundle install --path vendor/bundle
      # - run: bundle exec rake deploy
      # - run: ls

      # - run: cd src/Sample
      # - run: ls
      # - run: composer update
      #



      - run:
          name: copy deploy source
          command: |
            cp -r "/home/circleci/circleci-workflows/src/Sample" "/home/circleci/circleci-workflows/deploy"

      - run:
          name: composer update
          command: |
            cd src/Sample
            composer update

      - run: pwd
      - run: ls
      - run: ls /home/circleci/circleci-workflows/src/Sample

      # - run: php /workspace/src/Sample artisan deploy:exec
      # - run: bash vendor/bin/aws-code-deploy.sh

      # - run:
      #     name: deploy source git pull
      #     command: |
      #       mkdir deploy
      #       cd deploy
      #       bash git clone https://github.com/okamok/laravel-crud-sample.git

      - run:
          name: code deploy exec
          command: |
            cd src/Sample
            bash vendor/bin/aws-code-deploy.sh


workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy: # deployはbuildのあとに実行
          requires:
            - build
          filters: # developブランチの場合のみデプロイする
            branches:
              only: master

# # PHP CircleCI 2.0 configuration file
# #
# # Check https://circleci.com/docs/2.0/language-php/ for more details
# #
# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/php:7.1-browsers
#
#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mysql:9.4
#
#     working_directory: ~/repo
#
#     steps:
#       - checkout
#
#       - run: echo "This is Circle CI test."
#       # # Download and cache dependencies
#       # - restore_cache:
#       #     keys:
#       #     - v1-dependencies-{{ checksum "composer.json" }}
#       #     # fallback to using the latest cache if no exact match is found
#       #     - v1-dependencies-
#       #
#       # - run: composer install -n --prefer-dist
#       #
#       # - save_cache:
#       #     paths:
#       #       - ./vendor
#       #     key: v1-dependencies-{{ checksum "composer.json" }}
#       #
#       # # run tests!
#       # - run: phpunit
