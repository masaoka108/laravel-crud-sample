# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2

# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/php:7.1-browsers
#
#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mysql:9.4
#
#     working_directory: ~/repo
#
#     steps:
#       - checkout
#
#       - run: echo "This is Circle CI test."
#       # # Download and cache dependencies
#       # - restore_cache:
#       #     keys:
#       #     - v1-dependencies-{{ checksum "composer.json" }}
#       #     # fallback to using the latest cache if no exact match is found
#       #     - v1-dependencies-
#       #
#       # - run: composer install -n --prefer-dist
#       #
#       # - save_cache:
#       #     paths:
#       #       - ./vendor
#       #     key: v1-dependencies-{{ checksum "composer.json" }}
#       #
#       # # run tests!
#       # - run: phpunit
#
#   # deploy:
#   #   staging:
#   #     branch: master
#   #     codedeploy:
#   #       CodeDeploySampleApplication:
#   #         application_root: /
#   #         region: ap-northeast-1
#   #         revision_location:
#   #           revision_type: S3
#   #           s3_location:
#   #             bucket: chiba-app
#   #             key_pattern: CodeDeploySampleApplication-{BRANCH}-{SHORT_COMMIT}
#   #         deployment_group: DemoFleet
#   #         deployment_config: CodeDeployDefault.AllAtOnce


jobs:
  deploy:
    # working_directory: ~/repo
    working_directory: /src
    environment:
      - AWS_DEFAULT_REGION: ap-northeast-1
      - CODE_DEPLOY_S3_BUCKET_NAME: chiba-app
      - CODE_DEPLOY_APPLICATION_NAME: CodeDeploySampleApplication
      - CODE_DEPLOY_GROUP_NAME: CodeDeploySampleDeployGroup
      # - APP_DIR: .
      - APP_DIR: ./src
    docker:
      - image: innovatorjapan/awscli:latest
    steps:
      - attach_workspace:
          at: .
      - run: echo "Start Deploy"
      - run: sh /bin/aws-s3-deploy
